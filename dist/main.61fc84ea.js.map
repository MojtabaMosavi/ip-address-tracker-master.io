{"version":3,"sources":["js/searchForm.js","js/Observer.js","js/Infolist.js","js/utils.js","js/main.js"],"names":["SearchForm","_url","data","_validateDomNodes","_render","ipTracker","document","querySelector","ipTrackerForm","ipTrackerBtn","ipTrackerInput","ipTrackerInfoList","Error","_bindEnvents","addEventListener","classList","toggle","console","log","longitude","latitude","map","L","zoom","center","zoomControl","worldCopyJump","tileLayer","attribution","addTo","Observer","observers","Set","observer","add","delete","state","forEach","update","InfoList","ipTrackerIpAddress","ipTrackerLocation","ipTrackerTimeZone","ipTrackerIspProvider","_init","_eventBinding","_updateData","logData","jsonify","json","logError","error","validateResponse","response","ok","statusText","App","url","searchForm","infoList","subscribe"],"mappings":";AA0EK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApEgBA,IAAAA,EAAAA,WAEJ,SAAA,IAAA,EAAA,KAAA,GACJC,KAAAA,KAAK,uEACLC,KAAAA,KAAO,GAGZ,KAAKC,qBACAC,KAAAA,UA4DR,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBAtDD,MAAA,WAQQ,GANCC,KAAAA,UAAYC,SAASC,cAAc,uBACnCC,KAAAA,cAAgB,KAAKH,UAAUE,cAAc,qBAC7CE,KAAAA,aAAe,KAAKJ,UAAUE,cAAc,oBAC5CG,KAAAA,eAAiB,KAAKL,UAAUE,cAAc,sBAC9CI,KAAAA,kBAAoB,KAAKN,UAAUE,cAAc,qBAElD,KAAKF,WAAa,KAAKG,eACvB,KAAKC,cAAgB,KAAKE,mBAAqB,KAAKD,eAC7C,OAAA,EAEDE,MAAAA,MAAM,2CA0CnB,CAAA,IAAA,UArCD,MAAA,WACSC,KAAAA,iBAoCR,CAAA,IAAA,eAhCD,MAAA,WAAc,IAAA,EAAA,KACLJ,KAAAA,aAAaK,iBAAiB,QAAS,WACxC,EAAKL,aAAaM,UAAUC,OAAO,2BACnC,EAAKR,cAAcO,UAAUC,OAAO,4BACpC,EAAKN,eAAeK,UAAUC,OAAO,6BACrC,EAAKL,kBAAkBI,UAAUC,OAAO,gCA2B/C,CAAA,IAAA,SAtBD,MAAA,SAAOd,GACHe,QAAQC,IAAIhB,KAqBf,CAAA,IAAA,aAfD,MAAA,WAAWiB,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAEC,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACvBC,EAAMC,EAAED,IAAI,kBAAmB,CAChCE,KAAM,GACNC,OAAO,CAACL,EAAUC,GAClBK,aAAY,EACZC,eAAc,IAIlBJ,EAAEK,UAAU,2DACZ,CAACN,IAAK,MACNE,KAAM,GACNK,YAAa,4FACVC,MAAMR,OAEZ,EApEgBrB,GAoEhB,QAAA,QAAA;;ACxDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAfgB8B,IAAAA,EAAAA,WACJ,SAAA,IAAA,EAAA,KAAA,GACJC,KAAAA,UAAY,IAAIC,IAaxB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAVD,MAAA,SAAUC,GACDF,KAAAA,UAAUG,IAAID,KAStB,CAAA,IAAA,cAND,MAAA,SAAYA,GACHF,KAAAA,UAAUI,OAAOF,KAKzB,CAAA,IAAA,SAFD,MAAA,SAAOG,GACEL,KAAAA,UAAUM,QAAS,SAAAJ,GAAYA,OAAAA,EAASK,OAAOF,SACvD,EAfgBN,GAehB,QAAA,QAAA;;ACuCA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtDgBS,IAAAA,EAAAA,WAEJ,SAAA,IAAA,EAAA,KAAA,GACJnC,KAAAA,UAmDR,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA/CD,MAAA,SAAOF,GACHe,QAAQC,IAAIhB,KA8Cf,CAAA,IAAA,UA3CD,MAAA,cA2CC,CAAA,IAAA,WAvCD,MAAA,SAASA,GACLe,QAAQC,IAAIhB,OAsCf,EAtDgBqC,GAsDhB,QAAA,QAAA,EAhCD,IAAM5B,EAAoBL,SAASC,cAAc,qBAC3CiC,EAAqB7B,EAAkBJ,cAAc,2BACrDkC,EAAoB9B,EAAkBJ,cAAc,yBACpDmC,EAAoB/B,EAAkBJ,cAAc,yBACpDoC,EAAuBhC,EAAkBJ,cAAc,6BAG7D,SAASqC,IACLC,IACAzC,IAMJ,SAASyC,KAOT,SAASzC,KAOT,SAAS0C,EAAY5C,GACjBe,QAAQC,IAAI,aACZD,QAAQC,IAAIhB;;AC5Cb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,QAAA,SAAA,QAAA,QAAA,QAAA,aAAA,EATA,IAAM6C,EAAU,SAAA7C,GAAQe,OAAAA,QAAQC,IAAIhB,IASpC,QAAA,QAAA,EANA,IAAM8C,EAAU,SAAA9C,GAAgBA,OAAAA,EAAK+C,QAMrC,QAAA,QAAA,EAHA,IAAMC,EAAW,SAAAC,GAAUlC,QAAQC,IAAI,mCAAqCiC,IAG5E,QAAA,SAAA,EAAA,IAAMC,EAAmB,SAACC,GAC1B,GAACA,EAASC,GAGFD,OAAAA,EAFHzC,IAAAA,MAAOyC,EAASE,aAFrB,QAAA,iBAAA;;ACPP,aALA,IAAA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,cAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAMC,OACFlD,SAASQ,iBAAiB,mBAAoB,WAEhC2C,IAEJC,EAAa,IAAI1D,EAAJ,QACb2D,EAAW,IAAIpB,EAAJ,QAGXN,EAAW,IAAIH,EAAJ,QACjBG,EAAS2B,UAAUF,GACnBzB,EAAS2B,UAAUD","file":"main.61fc84ea.js","sourceRoot":"../src","sourcesContent":["\r\n/*----------------------------------------*\\\r\n  #search-bar \r\n\\*----------------------------------------*/\r\n\r\n\r\nexport default class SearchForm{\r\n\r\n    constructor(){\r\n        this._url=\"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\";\r\n        this.data = {}\r\n\r\n        // initilizing \r\n     if(this._validateDomNodes()){\r\n        this._render();\r\n     }else{\r\n         return;\r\n     }\r\n    }\r\n\r\n    _validateDomNodes(){\r\n        // dom caching search form \r\n        this.ipTracker = document.querySelector(\".ip-tracker-wrapper\")\r\n        this.ipTrackerForm = this.ipTracker.querySelector(\".ip-tracker__form\");\r\n        this.ipTrackerBtn = this.ipTracker.querySelector(\".ip-tracker__btn\");\r\n        this.ipTrackerInput = this.ipTracker.querySelector(\".ip-tracker__input\");\r\n        this.ipTrackerInfoList = this.ipTracker.querySelector(\".ip-tracker__info\");\r\n\r\n        if (this.ipTracker && this.ipTrackerForm && \r\n            this.ipTrackerBtn && this.ipTrackerInfoList && this.ipTrackerInput){\r\n            return true;\r\n        }else{\r\n            throw Error(\"required dom nodes are not available.\");\r\n        }\r\n    }\r\n\r\n    // render method \r\n    _render(){\r\n        this._bindEnvents();\r\n   }\r\n\r\n    // bind events \r\n    _bindEnvents(){\r\n        this.ipTrackerBtn.addEventListener('click', () => {\r\n            this.ipTrackerBtn.classList.toggle(\"ip-tracker__btn--active\");\r\n            this.ipTrackerForm.classList.toggle(\"ip-tracker__form--active\");\r\n            this.ipTrackerInput.classList.toggle(\"ip-tracker__input--active\");\r\n            this.ipTrackerInfoList.classList.toggle(\"ip-tracker__info--active\");\r\n        });\r\n\r\n    }\r\n    \r\n    update(data){\r\n        console.log(data)\r\n    }\r\n\r\n\r\n\r\n    // creating the map \r\n    _createMap(longitude=0,latitude=0){\r\n        let  map = L.map('ip-tracker__map', {\r\n            zoom: 12,\r\n            center:[longitude,latitude],\r\n            zoomControl:false,\r\n            worldCopyJump:true,\r\n        });\r\n\r\n\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{map}', \r\n        {map: 'bar', \r\n        zoom: 12,\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(map);\r\n\r\n    }\r\n\r\n\r\n\r\n}","/*----------------------------------------*\\\r\n  #Observer\r\n\\*----------------------------------------*/\r\nexport default class Observer {\r\n    constructor(){\r\n        this.observers = new Set();\r\n    }\r\n\r\n    subscribe(observer){\r\n        this.observers.add(observer)\r\n    }\r\n\r\n    unsubscribe(observer){\r\n        this.observers.delete(observer);\r\n    }\r\n\r\n    notify(state){\r\n        this.observers.forEach( observer => observer.update(state))\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","/*----------------------------------------*\\\r\n  #infoList\r\n\\*----------------------------------------*/\r\nexport default class InfoList{\r\n\r\n    constructor(){\r\n        this._render();\r\n\r\n    }\r\n\r\n    update(data){\r\n        console.log(data)\r\n    }\r\n\r\n    _render(){\r\n\r\n    }\r\n\r\n    _logData(data){\r\n        console.log(data)\r\n    }\r\n\r\n}   \r\n\r\n    // dom casching \r\n    const ipTrackerInfoList = document.querySelector(\".ip-tracker__info\");\r\n    const ipTrackerIpAddress = ipTrackerInfoList.querySelector(\".ip-tracker__ip-address\");\r\n    const ipTrackerLocation = ipTrackerInfoList.querySelector(\".ip-tracker__location\");\r\n    const ipTrackerTimeZone = ipTrackerInfoList.querySelector(\".ip-tracker__timezone\");\r\n    const ipTrackerIspProvider = ipTrackerInfoList.querySelector(\".ip-tracker__isp-provider\");\r\n\r\n\r\n    function _init(){\r\n        _eventBinding();\r\n        _render();\r\n    }\r\n\r\n\r\n\r\n    // eventbinding \r\n    function _eventBinding(){}\r\n\r\n\r\n\r\n\r\n\r\n    // rendering \r\n    function _render(){\r\n\r\n\r\n    }\r\n\r\n    // updata list info\r\n\r\n    function _updateData(data){\r\n        console.log('called at');\r\n        console.log(data)\r\n    }\r\n\r\n\r\n\r\n","\r\n\r\n// log the date \r\nexport const logData = data => console.log(data);\r\n\r\n// convet the data to json format \r\nexport const jsonify = data => {return data.json()};\r\n\r\n// log error \r\nexport const logError = error =>{ console.log(\"Looks like something went wrong \" + error)};\r\n\r\n// check the status of response \r\nexport const validateResponse = (response) => {\r\n    if(!response.ok){\r\n        new Error (response.statusText);\r\n    }else{\r\n        return response;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import SearchForm from \"./searchForm.js\";\r\nimport Observer from \"./Observer.js\";\r\nimport InfoList from \"./Infolist.js\";\r\nimport {validateResponse,logData,logError,jsonify} from \"./utils.js\";\r\n\r\nconst App = (function(){\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        // variables\r\n            const url = \"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\";\r\n        // observers \r\n        const searchForm = new SearchForm();\r\n        const infoList = new InfoList(); \r\n\r\n        // subscribing \r\n        const observer = new Observer();\r\n        observer.subscribe(searchForm);\r\n        observer.subscribe(infoList)\r\n\r\n\r\n        function _init(){\r\n            _getData();\r\n            \r\n        }\r\n\r\n\r\n        // api call \r\n         function _getData() {\r\n            fetch(\"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\")\r\n            .then(validateResponse)\r\n            .then(jsonify)\r\n            .then(data => {\r\n                const {ip,isp,location:{country,city,region,timezone,lat:longitude,lng:latitude}} = data;\r\n                observer.notify({ip,isp,country,city,region,longitude,latitude,timezone});\r\n            })\r\n            .catch(logError)\r\n\r\n        }\r\n                \r\n\r\n\r\n    })\r\n})();\r\n\r\n"]}