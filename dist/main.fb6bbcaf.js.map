{"version":3,"sources":["js/utils.js","js/searchForm.js","js/Observer.js","js/Infolist.js","js/main.js"],"names":["logData","data","console","log","jsonify","json","logError","error","validateResponse","response","ok","Error","statusText","randomInt","Math","ceil","random","SearchForm","_validateDomNodes","_render","ipTracker","document","querySelector","ipTrackerForm","ipTrackerBtn","ipTrackerInput","ipTrackerInfoList","addEventListener","classList","toggle","_bindEnvents","longitude","latitude","map","L","zoom","center","worldCopyJump","location","icon","iconUrl","iconSize","iconAnchor","popupAnchor","className","inertia","marker","alt","addTo","bindPopup","tileLayer","attribution","state","_createMap","Observer","observers","Set","observer","update","add","delete","forEach","InfoList","ipTrackerIpAddress","ipTrackerLocation","ipTrackerTimeZone","ipTrackerIspProvider","ip","isp","country","city","region","timezone","textContent","_updateDomNodes","App","url","searchForm","infoList","subscribe","testData","_init","notify","_getData","fetch","then","lat","lng","catch"],"mappings":";;AIAA;;AACA;;AACA;AHFA,ADEA;AICA,AJAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,CAApB,EAEP;;AIAA,IAAM0E,GAAG,GAAI,YAAU;ADJvB,ADDA,AEMItD,EAAAA,QAAQ,CAACM,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;ADJxD,ADDA,AEMQ;ADJR,ADDA,AEMY,AHNZ,ADIO,IAAMvB,IIEKwE,GAAG,AJFD,GIEI,AJFD,SAAVxE,OAAU,CAAAH,IAAI,EAAI,+CIEnB,CAF4C,CAGhD;AHNR,ADGgC,IGFX6D,ADDAR,KFGkBrD,IAAI,CAACI,IAAL,EAAP;AGA5B,ADFA,AEMI,AHNR,ADEmD,CAA5C,EAEP,KIEcwE,UAAU,GAAG,CDJV,ADFA,GEMc5D,mBAAJ,EAAnB;ADJS,ADFA,AEOT,IHNaA,IGMP6D,QAAQ,GAAG,IAAIhB,iBAAJ,EAAjB,CALgD,CAOhD;AHNJ,wBAAa;AEAT,ADFA,AESA,AHPS,QEAN,ACOGL,CFTDF,ICEGrC,GCOM,EFTd,CESiB,EFTA,EESIoC,EFTAE,GAAJ,ECEd,ADFH,ECEA,EAA4B,MCOX,EAAjB;ADNI,ADFP,AESGC,IAAAA,QAAQ,CAACsB,SAAT,CAAmBF,UAAnB;ADNC,ACODpB,AHRJ,ADCG,IIOCA,AJPKnD,CGFL,MAEO,CCOC,AJPK,CIOJyE,EJPO,OIOhB,CAAmBD,CJPdxE,OIOL,CJPgB,CAAAC,KAAK,EAAG;AGCpB,ACOJ,AHRH,ADA6BL,EAAAA,MIQpB8E,AHRN,CDAiC,CAAC7E,GCA7Be,ADAqB,CAAY,EIQxB,GAAG,WHRjB,EAAH,EAA4B,iBDAkDX,KAAjD;AGEzB,ACOG+D,AHRJ,ADDkF,CAAnF,EAEP,GIOYA,IAAI,CHRHnD,CGQK,MHRV,KGOiB;ADLpB,ACOOkD,AHRN,IEGF,CFLC,CGUOA,KFXR,ADGM,EGQS,EAAE,IAFI,WFTXZ,QAAV,EAAmB;AACf,AEWIU,AHRH,MGQGA,EAAE,EFXH,AEWK,OFXEV,QAAQ,AEQD,CFREC,MAAhB,KAA4B,UAA/B,EAA0C;AACtC,AEWAU,AHRN,MGQMA,GAAG,EAAE,EFXAb,SAAL,CAAeI,GAAf,CAAmBF,IEON,IFPb;AAEH,AEUGzB,AHRP,MGQOA,CFbJ,MAGK,CEUO,EAAE,QALG;AFJf,AEUED,AJXL,IAAMvB,EIWDuB,QFVI,CEUK,EAAE,CFVHpB,EFDS,GECb,AFDgB,CECN,CEID,OJLZH,gBAAmB,CAACC,OECjB,CAAN,AFDsB,EAAc;AEErC,AEUG8D,AJXR,MIWQA,AJXL,CAAC9D,IGEJ,CCSc,EAAE,CJXJ,CAACC,EAAb,EAAgB,YIIK,QDFF;AACf,ADDH,AEUO8D,AJXJ,MIWIA,EJXA7D,GGECe,EHFL,CIWY,AJXDjB,EIWG,MJXK,CAACG,KGEpB,GAAyBS,EHFzB,MGEiC,CAACC,aAAT,CAAuB,mBAAvB,CAAzB;AACA,ACAiB,AJFpB,GAFD,EIII,IJFC,EGEIyC,AFDT,kBECI,GAA0B,KAAKrC,GFDhB,cECW,CAAuBJ,aAAvB,CAAqC,yBAArC,CAA1B;AACA,AFDA,ADDA,WGEK0C,AHFEvD,QAAP,SGEA,GAAyB,KAAKiB,iBAAL,CAAuBJ,aAAvB,CAAqC,uBAArC,CAAzB;AACA,ACOA,AHRA,ADDH,WGEQ2C,ADFT,ADCS7C,EGQI6D,KAAT,EHRA,CGQgB,EHRC5D,KECjB,GAAyB,AFDA,CCDjBoC,ADCkBnC,IECII,IDFlC,EAAqB,GDCA,CAAuB,OECf,CAAuBJ,aAAvB,AFDR,CEC6C,AFD9D,uBECyB,CAAzB;AACA,ADFA,AESI,AHRJ,ADDP,CANM,EAQP,QGAa4C,ADFAX,ADCAhC,SCDL,CAAeqC,GDCf,GCDA,ADCqB,CCDCH,GCEtB,CFD0BrC,EECE,EDF5B,GCEiCM,EFDZ,CAAeJ,aAAf,CECO,AFDsB,CECCA,aAAvB,CAAqC,IFD5C,CAArB,sBEC4B,CAA5B;ADDH,AESOmC,AHRJ,MGQIA,KHRCjC,GGQO,CAAC0D,MAAT,CAAgBF,CHRpB,GAAoB,IGQhB,CHRqB5D,SAAL,CAAeE,aAAf,CAA6B,kBAA7B,CAApB;AEEA,ACOC,AHRD,UECG,CFDEG,IECGC,UFDR,GAAsB,IECnB,CFDwBN,GECE,KAAK2C,CFDZ,CAAezC,aAAf,CAA6B,EEChD,IAAqD,KAAK0C,SFDvC,CAAtB,OECG,IACI,KAAKC,iBADT,IAC8B,KAAKC,oBADtC,EAC2D;AACnD,AFFR,WAAKxC,IEEU,IAAP,SFFR,GAAyB,KAAKN,SAAL,CAAeE,aAAf,CAA6B,mBAA7B,CAAzB;AEGK,ACML2D,IAAAA,GDTA,ECSK,EFVT,CEfoD,CDmBvC,ACQT,cFZG7B,KAAP,EAAa;ACKD,ADJR,ADEA,ADHD,IAAMvC,MCGD,CCFC0C,EFDS,CGKA,CFFLnC,CDHQ,EGKCT,EDJlB,CAAekD,ECID,CAAW,AFFrB,CDHChD,GECL,ADEsB,CCFE,IDEGU,CDHV,GAAK,EECEkC,ODEpB,CCF4B,GDG5B,KAAKjC,KECK,CAAN,MFFJ,IACqB,KAAKE,iBAD1B,IAC+C,KAAKD,cADxD,EACuE;AEElE,ADL2B,ADI5B,ADLoB,SAAOX,IAAI,CAACC,CECA0C,ADIzB,GDLoB,CCK3B,ADLqC3C,IECG,AFDC,CECA4C,AFDC1C,MECV,AFDK,CECWoC,IFDK,CECrB,CAAJ,AFDD,CAAP;AGQ3B,ADPmC,AEY/B,AHPA,ADN4D,CAA9D,MECC,ADEA,MGUU+B,AHPL,QGOJ,GAAoB;AFXxB,AEYOC,AHPA,MGOAA,KAAK,CAAC,EHPAzE,KAAK,CAAC,uCAAD,CAAX,sBGOK,CAAL,CACC0E,IADD,CACM7E,uBADN,EAEC6E,IAFD,CAEMjF,cAFN,EAGCiF,IAHD,CAGM,UAAApF,IAAI,EAAI;AACV,AHVP,YGUckE,EAAP,GAAoFlE,IAApF,CAAOkE,EAAP;AAAA,AHTX,MAED,KEDA,CCQsBC,GAAV,GAAoFnE,IAApF,CAAUmE,GAAV,gBDR6D;AAAA,ACQ7D,UDRKD,EAAwD,QAAxDA,EAAwD,OCQuBlE,IAApF,CAAcqC,QAAd;ADR6D,ACQ7D,UDRQ8B,ECQgBC,CDRqC,MCQ7D,EDRQD,GAAqD,aCQrCC,OAAxB;ADR6D,ACQ7D,UDRYA,ECQoBC,IAAhC,CDR6D,QAAjDD,OAAiD,ECQ7BC,IAAhC;ADR6D,ACQ7D,UDRoBA,CFEhC,CGMiDC,EDRwB,ICQ7D,IDRoBD,IAAyC,SFE3D,CGMmCC,MAArC;ADR6D,ACQ7D,AHNE,UEFuBA,ECQmBC,IDRiB,ICQ7D,IDRyBD,MAAoC,QCQjBC,QAA5C;ADR6D,ACQ7D,UDRgCzC,ECQyBA,ODRI,ECQ7D,MDRgCA,SAA6B,GCQRuD,GAArD;ADR6D,ACQ7D,AHLR,UEHkDtD,CFG7CR,CGK0EQ,MDRV,ECQ7D,GHLR,CAAkBL,EEHgCK,QAAmB,ICQMuD,EHL3E,CGKQ,AHL2B,OAAnC,EAA4C,YAAM;AEHmB,ACS7D9B,AHLJ,QGKIA,AHLJ,EEJuDe,GFInD,CAAChD,EGKO,CAAC0D,CDToD,KCS7D,CAAgB,EDTmCV,AFIvD,CAAkB5C,OEJ+C,EFIjE,CAA4BC,MAA5B,CAAmC,yBAAnC;AEHJ,ACQyBsC,UAAAA,CDRpBJ,CCQsB,EAAFI,EAAD,aDRxB,CAAwBM,WAAxB,GAAsCN,EAAtC;AACA,ACO4BC,AHJxB,QAAA,EGIwBA,CDPvBJ,ECO0B,AHJvB,CAACzC,CGImB6C,GAAJ,SHJpB,CEHJ,AFGuBxC,CEHA6C,QFGnB,CAA6B5C,EEHjC,GAAqCwC,CFGjC,CAAoC,KEHxC,qBFGI;AEFJ,ACMgCA,UAAAA,CDN3BJ,MCMkC,EAAPI,OAAR,EDNxB,CAAuBI,WAAvB,GAAqCD,QAArC;AACA,ACKwCF,AHHpC,QAAA,EGGoCA,CDLnCJ,EFEG,CGGoC,AHHnCzC,EGG+B6C,IAAhB,QHHpB,CAAoB1C,EEFxB,CAA0B6C,MFEtB,CAA8B5C,IEFlC,EFEI,CEFoCuC,AFEC,GEFzC,wBFEI;AEAP,ACGgDG,UAAAA,MAAM,EAANA,MAArB;AAA4BxC,AHFhD,QAAA,EGEgDA,GHF5C,CAACL,KGEoD,EAATK,SAA5B,CHFpB,CAAuBH,SAAvB,CAAiCC,MAAjC,CAAwC,0BAAxC;AGE0DG,AHD7D,OALD,GGM8DA,QAAQ,EAARA,QAAtC;AAA+CwC,AHA1E,MACD,IGD2EA,CDA3E,OCAmF,EAARA,QDAnEpB,KAAR,EAAc;AACV,ACDwB,SAAhB,EDCHsB,eAAL,CAAqBtB,KAArB;AACH,ACDQ,OAND,EAOCoC,KAPD,CAOOlF,eAPP;AASH;AAIJ,GA1CD,QHoCA,mBAAS;AGOZ,AHNO,CGtCI,EAAZ,QDuCI,AFDSwB,YAAL,IECGsB,KAAP,EAAa;AACT,AFDJ,MAEA,KEDSjC,OAAL,CAAaiC,KAAb;AACF;;;WFCF,0BAAsC;AAAA,gCAA1BrB,SAA0B;AAAA,UAA1BA,SAA0B,+BAAhB,EAAgB;AAAA,+BAAbC,QAAa;AAAA,UAAbA,QAAa,8BAAJ,EAAI;AAElC;AACA,UAAKC,GAAG,GAAGC,CAAC,CAACD,GAAF,CAAM,iBAAN,EAAyB;AAChCE,QAAAA,IAAI,EAAE,EAD0B;AAEhCC,QAAAA,MAAM,EAAC,CAACL,SAAD,EAAWC,QAAX,CAFyB;AAGhCK,QAAAA,aAAa,EAAC;AAHkB,OAAzB,CAAX;AAMD;AACP;;AACO;AACP;AAEQ;;AACA,UAAIC,QAAQ,GAAGJ,CAAC,CAACK,IAAF,CAAO;AAClBC,QAAAA,OAAO,EAAE,qBADS;AAElBC,QAAAA,QAAQ,EAAM,CAAC,EAAD,EAAK,EAAL,CAFI;AAGlBC,QAAAA,UAAU,EAAI,CAACX,SAAD,EAAYC,QAAZ,CAHI;AAIlBW,QAAAA,WAAW,EAAG,CAAC,CAAC,EAAF,EAAM,EAAN,CAJI;AAKlBC,QAAAA,SAAS,EAAEN,QALO;AAMlBO,QAAAA,OAAO,EAAE,IANS;AAOlBR,QAAAA,aAAa,EAAC;AAPI,OAAP,CAAf;AAUAH,MAAAA,CAAC,CAACY,MAAF,CAAS,CAACf,SAAD,EAAWC,QAAX,CAAT,EACI;AACAO,QAAAA,IAAI,EAAED,QADN;AAEAS,QAAAA,GAAG,EAAE;AAFL,OADJ,EAIGC,KAJH,CAISf,GAJT,EAIcgB,SAJd,CAIwB,aAJxB,EAzBkC,CAgClC;AAEA;;AACAf,MAAAA,CAAC,CAACgB,SAAF,CAAY,0DAAZ,EACA;AAACjB,QAAAA,GAAG,EAAE,KAAN;AACAE,QAAAA,IAAI,EAAE,EADN;AAEAgB,QAAAA,WAAW,EAAE;AAFb,OADA,EAIGH,KAJH,CAISf,GAJT;AASH;;;WAGD,gBAAOmB,KAAP,EAAa;AACT,WAAKC,UAAL,CAAgBD,KAAhB;;AACAlD,MAAAA,OAAO,CAACC,GAAR,CAAYiD,KAAZ;AACH","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["\r\n\r\n// log the date \r\nexport const logData = data => console.log(data);\r\n\r\n// convet the data to json format \r\nexport const jsonify = data => {return data.json()};\r\n\r\n// log error \r\nexport const logError = error =>{ console.log(\"Looks like something went wrong \" + error)};\r\n\r\n// check the status of response \r\nexport const validateResponse = (response) => {\r\n    if(!response.ok){\r\n        new Error (response.statusText);\r\n    }else{\r\n        return response;\r\n    }\r\n}\r\n\r\n// return a random integer \r\nexport const randomInt = () =>{ return Math.ceil(Math.random() * 10)}\r\n\r\n\r\n","import { randomInt } from \"./utils\";\r\n\r\n/*----------------------------------------*\\\r\n  #search-bar \r\n\\*----------------------------------------*/\r\nexport default class SearchForm{\r\n\r\n    constructor(){\r\n    // initilizing dom nodes \r\n     if(this._validateDomNodes()){\r\n        this._render();\r\n     }else{\r\n         return;\r\n     }\r\n    }\r\n\r\n    _validateDomNodes(){\r\n        // dom caching search form \r\n        this.ipTracker = document.querySelector(\".ip-tracker-wrapper\")\r\n        this.ipTrackerForm = this.ipTracker.querySelector(\".ip-tracker__form\");\r\n        this.ipTrackerBtn = this.ipTracker.querySelector(\".ip-tracker__btn\");\r\n        this.ipTrackerInput = this.ipTracker.querySelector(\".ip-tracker__input\");\r\n        this.ipTrackerInfoList = this.ipTracker.querySelector(\".ip-tracker__info\");\r\n\r\n        if (this.ipTracker && this.ipTrackerForm && \r\n            this.ipTrackerBtn && this.ipTrackerInfoList && this.ipTrackerInput){\r\n            return true;\r\n        }else{\r\n            throw Error(\"required dom nodes are not available.\");\r\n        }\r\n    }\r\n\r\n    // bind events \r\n    _bindEnvents(){\r\n        this.ipTrackerBtn.addEventListener('click', () => {\r\n            this.ipTrackerBtn.classList.toggle(\"ip-tracker__btn--active\");\r\n            this.ipTrackerForm.classList.toggle(\"ip-tracker__form--active\");\r\n            this.ipTrackerInput.classList.toggle(\"ip-tracker__input--active\");\r\n            this.ipTrackerInfoList.classList.toggle(\"ip-tracker__info--active\");\r\n        });\r\n    }\r\n    // render method \r\n    _render(){\r\n        this._bindEnvents();\r\n   }\r\n\r\n    // creating the map \r\n    _createMap({longitude=12,latitude=13}){\r\n\r\n        // map configurations \r\n        let  map = L.map('ip-tracker__map', {\r\n            zoom: 14,\r\n            center:[longitude,latitude],\r\n            worldCopyJump:true,\r\n        });\r\n\r\n       /* let fx = new L.PosAnimation();\r\n        fx.run(\"ip-tracker__map\", [300, 500], 0.5); */\r\n       /*  map.setView([randomInt(),randomInt()]);\r\n        map.flyTo([longitude,latitude]) */\r\n\r\n        // location icon \r\n        let location = L.icon({\r\n            iconUrl: './icon-location.svg',\r\n            iconSize:     [47, 55], \r\n            iconAnchor:   [longitude, latitude], \r\n            popupAnchor:  [-30, 20],\r\n            className: location,\r\n            inertia: true,\r\n            worldCopyJump:true,\r\n        });\r\n\r\n        L.marker([longitude,latitude], \r\n            {\r\n            icon: location,\r\n            alt: \"loaction\"\r\n        }).addTo(map).bindPopup(\"we are here\") \r\n\r\n\r\n        // binding a popup to the icon \r\n\r\n        // layer \r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{map}', \r\n        {map: 'bar', \r\n        zoom: 12,\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(map);\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    \r\n    update(state){\r\n        this._createMap(state);\r\n        console.log(state)\r\n    }   \r\n\r\n\r\n}","/*----------------------------------------*\\\r\n  #Observer\r\n\\*----------------------------------------*/\r\nexport default class Observer {\r\n    constructor(){\r\n        this.observers = new Set();\r\n    }\r\n\r\n    subscribe(observer){\r\n        if(typeof(observer.update) === \"function\"){\r\n            this.observers.add(observer);\r\n\r\n        }else{\r\n          throw new Error(\" oberver.update is not defined\");  \r\n        }\r\n    }\r\n\r\n    unsubscribe(observer){\r\n        this.observers.delete(observer);\r\n    }\r\n\r\n    notify(state){\r\n        this.observers.forEach( observer => observer.update(state))\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","\r\n/*----------------------------------------*\\\r\n  #infoList\r\n\\*----------------------------------------*/\r\nexport default class InfoList{\r\n\r\n    constructor(){\r\n        if(this._validateDomNodes()){\r\n            return \r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    // validating dom nodes \r\n    _validateDomNodes(){\r\n        this.ipTrackerInfoList = document.querySelector(\".ip-tracker__info\");\r\n        this.ipTrackerIpAddress = this.ipTrackerInfoList.querySelector(\".ip-tracker__ip-address\");\r\n        this.ipTrackerLocation = this.ipTrackerInfoList.querySelector(\".ip-tracker__location\");\r\n        this.ipTrackerTimeZone = this.ipTrackerInfoList.querySelector(\".ip-tracker__timezone\");\r\n        this.ipTrackerIspProvider = this.ipTrackerInfoList.querySelector(\".ip-tracker__isp-provider\");\r\n\r\n        if(this.ipTrackerInfoList && this.ipTrackerIpAddress && this.ipTrackerLocation \r\n            && this.ipTrackerTimeZone && this.ipTrackerIspProvider){\r\n                return true\r\n            }else{\r\n                throw new Error (\"Required dom nodes are not defined\")\r\n            }\r\n\r\n    }\r\n\r\n    _updateDomNodes({ip,isp,country,city,region,longitude,latitude,timezone}){\r\n        this.ipTrackerIpAddress.textContent = ip;\r\n        this.ipTrackerLocation.textContent = country;\r\n        this.ipTrackerTimeZone.textContent = timezone;\r\n        this.ipTrackerIspProvider.textContent = isp;\r\n        \r\n    }   \r\n\r\n\r\n    _render(state){\r\n        this._updateDomNodes(state);\r\n    }\r\n\r\n    update(state){\r\n        this._render(state);\r\n     }\r\n\r\n}\r\n","import SearchForm from \"./searchForm.js\";\r\nimport Observer from \"./Observer.js\";\r\nimport InfoList from \"./Infolist.js\";\r\nimport {validateResponse,logData,logError,jsonify} from \"./utils.js\";\r\n\r\nconst App = (function(){\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        // variables\r\n            const url = \"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\";\r\n        // observers \r\n        const searchForm = new SearchForm();\r\n        const infoList = new InfoList(); \r\n\r\n        // subscribing \r\n        const observer = new Observer();\r\n        observer.subscribe(searchForm);\r\n        observer.subscribe(infoList)\r\n        const testData = {\r\n            city: \"Södermalm\",\r\n            country: \"SE\",\r\n            ip: \"82.183.60.238\",\r\n            isp: \"Ownit Broadband AB\",\r\n            latitude: 18.07577,\r\n            longitude: 59.31278,\r\n            region: \"Stockholm County\",\r\n            timezone: \"+02:00\",}\r\n        function _init(){\r\n            /* _getData(); */\r\n            observer.notify(testData)\r\n        }\r\n\r\n        _init()\r\n\r\n        // api call \r\n         function _getData() {\r\n            fetch(\"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\")\r\n            .then(validateResponse)\r\n            .then(jsonify)\r\n            .then(data => {\r\n                const {ip,isp,location:{country,city,region,timezone,lat:longitude,lng:latitude}} = data;\r\n                observer.notify({ip,isp,country,city,region,longitude,latitude,timezone});\r\n            })\r\n            .catch(logError)\r\n\r\n        }\r\n                \r\n\r\n\r\n    })\r\n})();\r\n\r\n"]}