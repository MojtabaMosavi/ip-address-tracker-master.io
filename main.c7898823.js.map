{"version":3,"sources":["js/utils.js","js/searchForm.js","js/Observer.js","js/Infolist.js","js/main.js"],"names":["logData","data","console","log","jsonify","json","logError","error","validateResponse","response","ok","Error","statusText","randomInt","Math","ceil","random","SearchForm","loading","_validateDomNodes","_render","ipTracker","document","querySelector","ipTrackerForm","ipTrackerBtn","ipTrackerInput","ipTrackerInfoList","ipTrackerLoader","addEventListener","classList","toggle","_bindEnvents","longitude","latitude","map","L","zoom","center","worldCopyJump","location","icon","iconUrl","iconSize","iconAnchor","popupAnchor","className","inertia","marker","alt","addTo","bindPopup","tileLayer","attribution","state","Observer","observers","Set","observer","update","add","delete","forEach","InfoList","ipTrackerIpAddress","ipTrackerLocation","ipTrackerTimeZone","ipTrackerIspProvider","ip","isp","country","timezone","city","region","textContent","_updateDomNodes","App","url","searchForm","infoList","subscribe","testData","setTimeout","notify"],"mappings":"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","file":"main.c7898823.js","sourceRoot":"../src","sourcesContent":["\r\n\r\n// log the date \r\nexport const logData = data => console.log(data);\r\n\r\n// convet the data to json format \r\nexport const jsonify = data => {return data.json()};\r\n\r\n// log error \r\nexport const logError = error =>{ console.log(\"Looks like something went wrong \" + error)};\r\n\r\n// check the status of response \r\nexport const validateResponse = (response) => {\r\n    if(!response.ok){\r\n        new Error (response.statusText);\r\n    }else{\r\n        return response;\r\n    }\r\n}\r\n\r\n// return a random integer \r\nexport const randomInt = () =>{ return Math.ceil(Math.random() * 10)}\r\n\r\n\r\n","import { randomInt } from \"./utils\";\r\n\r\n/*----------------------------------------*\\\r\n  #search-bar \r\n\\*----------------------------------------*/\r\nexport default class SearchForm{\r\n\r\n    constructor(){\r\n        this.loading = true;\r\n    // initilizing dom nodes \r\n     if(this._validateDomNodes()){\r\n        this._render();\r\n     }else{\r\n         return;\r\n     }\r\n    }\r\n\r\n    _validateDomNodes(){\r\n        // dom caching search form \r\n        this.ipTracker = document.querySelector(\".ip-tracker-wrapper\")\r\n        this.ipTrackerForm = this.ipTracker.querySelector(\".ip-tracker__form\");\r\n        this.ipTrackerBtn = this.ipTracker.querySelector(\".ip-tracker__btn\");\r\n        this.ipTrackerInput = this.ipTracker.querySelector(\".ip-tracker__input\");\r\n        this.ipTrackerInfoList = this.ipTracker.querySelector(\".ip-tracker__info-wrapper\");\r\n        this.ipTrackerLoader = this.ipTracker.querySelector(\".loader\");\r\n\r\n        if (this.ipTracker && this.ipTrackerForm && \r\n            this.ipTrackerBtn && this.ipTrackerInfoList && this.ipTrackerInput){\r\n            return true;\r\n        }else{\r\n            throw Error(\"required dom nodes are not available.\");\r\n        }\r\n    }\r\n\r\n    // bind events \r\n    _bindEnvents(){\r\n        this.ipTrackerBtn.addEventListener('click', () => {\r\n            this.ipTrackerBtn.classList.toggle(\"ip-tracker__btn--active\");\r\n            this.ipTrackerForm.classList.toggle(\"ip-tracker__form--active\");\r\n            this.ipTrackerInput.classList.toggle(\"ip-tracker__input--active\");\r\n            this.ipTrackerInfoList.classList.toggle(\"ip-tracker__info-wrapper--active\");\r\n        });\r\n    }\r\n\r\n    _loading(){\r\n      \r\n    }\r\n    // render method \r\n    _render(){\r\n        this._bindEnvents();\r\n      \r\n   }\r\n\r\n    // creating the map \r\n    _createMap({longitude=12,latitude=13}){\r\n\r\n        // map configurations \r\n        let  map = L.map('ip-tracker__map', {\r\n            zoom: 14,\r\n            center:[longitude,latitude],\r\n            worldCopyJump:true,\r\n        });\r\n\r\n       /* let fx = new L.PosAnimation();\r\n        fx.run(\"ip-tracker__map\", [300, 500], 0.5); */\r\n       /*  map.setView([randomInt(),randomInt()]);\r\n        map.flyTo([longitude,latitude]) */\r\n\r\n        // location icon \r\n        let location = L.icon({\r\n            iconUrl: './icon-location.svg',\r\n            iconSize:     [47, 55], \r\n            iconAnchor:   [longitude, latitude], \r\n            popupAnchor:  [-30, 20],\r\n            className: location,\r\n            inertia: true,\r\n            worldCopyJump:true,\r\n        });\r\n\r\n        L.marker([longitude,latitude], \r\n            {\r\n            icon: location,\r\n            alt: \"loaction\"\r\n        }).addTo(map).bindPopup(\"we are here\") \r\n\r\n\r\n        // binding a popup to the icon \r\n\r\n        // layer \r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{map}', \r\n        {map: 'bar', \r\n        zoom: 12,\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(map);\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    \r\n    update(state){\r\n        while(!state){\r\n            console.log(\"not defined\")\r\n        }\r\n        console.log(\"loaded\")\r\n        \r\n        }\r\n        \r\n\r\n    \r\n\r\n\r\n}","/*----------------------------------------*\\\r\n  #Observer\r\n\\*----------------------------------------*/\r\nexport default class Observer {\r\n    constructor(){\r\n        this.observers = new Set();\r\n    }\r\n\r\n    subscribe(observer){\r\n        if(typeof(observer.update) === \"function\"){\r\n            this.observers.add(observer);\r\n\r\n        }else{\r\n          throw new Error(\" oberver.update is not defined\");  \r\n        }\r\n    }\r\n\r\n    unsubscribe(observer){\r\n        this.observers.delete(observer);\r\n    }\r\n\r\n    notify(state){\r\n        this.observers.forEach( observer => observer.update(state))\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","\r\n/*----------------------------------------*\\\r\n  #infoList\r\n\\*----------------------------------------*/\r\nexport default class InfoList{\r\n\r\n    constructor(){\r\n        if(this._validateDomNodes()){\r\n            return \r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    // validating dom nodes \r\n    _validateDomNodes(){\r\n        this.ipTrackerInfoList = document.querySelector(\".ip-tracker__info\");\r\n        this.ipTrackerIpAddress = this.ipTrackerInfoList.querySelector(\".ip-tracker__ip-address\");\r\n        this.ipTrackerLocation = this.ipTrackerInfoList.querySelector(\".ip-tracker__location\");\r\n        this.ipTrackerTimeZone = this.ipTrackerInfoList.querySelector(\".ip-tracker__timezone\");\r\n        this.ipTrackerIspProvider = this.ipTrackerInfoList.querySelector(\".ip-tracker__isp-provider\");\r\n\r\n        if(this.ipTrackerInfoList && this.ipTrackerIpAddress && this.ipTrackerLocation \r\n            && this.ipTrackerTimeZone && this.ipTrackerIspProvider){\r\n                return true\r\n            }else{\r\n                throw new Error (\"Required dom nodes are not defined\")\r\n            }\r\n\r\n    }\r\n\r\n    _updateDomNodes({ip,isp,country,city,region,longitude,latitude,timezone}){\r\n        this.ipTrackerIpAddress.textContent = ip;\r\n        this.ipTrackerLocation.textContent = country;\r\n        this.ipTrackerTimeZone.textContent = timezone;\r\n        this.ipTrackerIspProvider.textContent = isp;\r\n        \r\n    }   \r\n\r\n\r\n    _render(state){\r\n        this._updateDomNodes(state);\r\n    }\r\n\r\n    update(state){\r\n        this._render(state);\r\n     }\r\n\r\n}\r\n","import SearchForm from \"./searchForm.js\";\r\nimport Observer from \"./Observer.js\";\r\nimport InfoList from \"./Infolist.js\";\r\nimport {validateResponse,logData,logError,jsonify} from \"./utils.js\";\r\n\r\nconst App = (function(){\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        // variables\r\n            const url = \"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\";\r\n        // observers \r\n        const searchForm = new SearchForm();\r\n        const infoList = new InfoList(); \r\n\r\n        // subscribing \r\n        const observer = new Observer();\r\n        observer.subscribe(searchForm);\r\n        observer.subscribe(infoList)\r\n        const testData = {\r\n            city: \"Södermalm\",\r\n            country: \"SE\",\r\n            ip: \"82.183.60.238\",\r\n            isp: \"Ownit Broadband AB\",\r\n            latitude: 18.07577,\r\n            longitude: 59.31278,\r\n            region: \"Stockholm County\",\r\n            timezone: \"+02:00\",}\r\n        function _init(){\r\n            /* _getData(); */\r\n            setTimeout(() => {  observer.notify(testData)\r\n                \r\n            }, 4000);\r\n          \r\n        }\r\n\r\n        _init()\r\n\r\n        // api call \r\n         function _getData() {\r\n            fetch(\"https://geo.ipify.org/api/v1?apiKey=at_ECLl7Ced4VodU7ViC2JH6JFpnaNzx\")\r\n            .then(validateResponse)\r\n            .then(jsonify)\r\n            .then(data => {\r\n                const {ip,isp,location:{country,city,region,timezone,lat:longitude,lng:latitude}} = data;\r\n                observer.notify({ip,isp,country,city,region,longitude,latitude,timezone});\r\n            })\r\n            .catch(logError)\r\n\r\n        }\r\n                \r\n\r\n\r\n    })\r\n})();\r\n\r\n"]}